Catalog Cosmos :

hlr : catalog['sersicfit'][:, 1]
sersic index (n) : catalog['sersicfit'][:, 2]
q = b/a (or e, i don't remember) : catalog['sersicfit'][:, 3]

the other parameters should be clearly explained on the .fits file


True Universe catalogue (It s the opposite of what i said earlier, the TU have a 2 component sersic fit parameters, and we transorm that to match cosmos)

def get_params(cat, i, pixel_scale):   #cat = TU cat, i = row of the cat
    radiusBulge = cat.getFloat(i, 5)
    radiusDisk = cat.getFloat(i, 8)*1.6783
    bt = cat.getFloat(i, 4)
    ell_B = cat.getFloat(i, 6)
    ell_D = cat.getFloat(i, 9)
    q = bt*ell_B + (1-bt)*ell_D
    mag = cat.getFloat(i, 3)
    PA = cat.getFloat(i, 7)

    # sersic n param prop to bt
    Nb = bt * 4 + 0.4
    SSersic_n = skewnorm.rvs(6, Nb, 0.3, size=1)[0]
    if SSersic_n < 0.1:
        SSersic_n = np.random.normal(0.5, 0.1, 1)
        if SSersic_n < 0.1:
            SSersic_n = 0.1
    if SSersic_n > 6:
        SSersic_n = skewnorm.rvs(6, 5.5, 0.1, size=1)[0]
        if SSersic_n > 6:
            SSersic_n = 5.6

    # Light radius in pixel
    light_radius = TotRadius(radiusBulge, radiusDisk, bt) / pixel_scale
    half_light_radius = float(light_radius) * np.sqrt(q)
    return mag, half_light_radius, q, SSersic_n, PA, bt


